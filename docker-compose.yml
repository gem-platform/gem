version: '3'
services:
  ##
  ## SERVICES
  ##

  # Provides MongoDB database to store
  # all the GEM data
  db:
    restart: on-failure:5
    build: ./gem/services/db
    volumes:
      - ./.data/db:/data/db
    ports:
      - 27017:27017
    env_file:
      - environment.dev.env
    healthcheck:
      test: sh /usr/src/app/health-check.sh

  # Provides Sphinx search engine
  search:
    restart: "no"
    build: ./gem/services/search
    volumes:
      - ./.data/search/data:/var/lib/sphinx/data
      - ./.data/search/logs:/var/log/sphinx
    env_file:
      - environment.dev.env
    expose:
      - 9306
      - 9312
    depends_on:
      - db
    healthcheck:
      test: python3 /usr/app/healtcheck.py

  # SMTP Server
  postman:
    image: jeanberu/mailcatcher
    env_file:
      - environment.dev.env
    expose:
      - 25
    ports:
      - 25:25
      - 1080:1080

  # Provides NGINX web serwer to tight all
  # the web application all together in one app
  web:
    restart: on-failure:5
    build: 
      context: ./gem/services/web
      args:
        env: dev
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - meeting-server
      - portal-server
      - office-server
      - bar-server
      - portal
    volumes:
      - ./.data/shared/media:/usr/shared/media
      - ./.keys/ssl:/etc/nginx/ssl
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost/ || exit 1
  
  # Run periodic tasks
  chronos:
    restart: on-failure:5
    build: 
      context: ./gem/services/chronos
    env_file:
      - environment.dev.env
    volumes:
      - ./.data/chronos:/usr/app/state

  ##
  ## IMAGES
  ##

  # Base image for all python-based backend cantainers
  gem-server:
    image: gem-server:latest
    build: ./gem/images/gem-server

  ##
  ## APPS: SERVICES
  ##

  # Meeting server
  meeting-server:
    image: meeting-server:latest
    restart: on-failure:5
    build: ./gem/services/meeting
    expose:
      - 8090
      - 8099
    env_file:
      - environment.dev.env
    volumes:
      - ./gem/services/meeting:/usr/src/app
    depends_on:
      - gem-server
      - db
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8099 || exit 1

  # Media server
  media-server:
    restart: on-failure:5
    build: ./gem/services/media
    expose:
      - 8090
    env_file:
      - environment.dev.env
    volumes:
      - ./gem/services/media:/usr/src/app
      - ./.data/shared/media:/usr/shared/media
    depends_on:
      - gem-server

  # Bar server
  bar-server:
    restart: on-failure:5
    build: ./gem/services/bar
    expose:
      - 8090
    env_file:
      - environment.dev.env
    volumes:
      - ./gem/services/bar:/usr/src/app
      - ./.data/shared/media:/usr/shared/media
    depends_on:
      - gem-server
      - db

  # Meeting server
  portal-server:
    restart: on-failure:5
    build: ./gem/services/portal
    expose:
      - 5000
    environment:
      - GUNICORN_CMD_ARGS=--bind=0.0.0.0:5000 --workers=1
    env_file:
      - environment.dev.env
    volumes:
      - ./gem/services/portal:/usr/src/app
    depends_on:
      - gem-server
      - db
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:5000/api/health || exit 1

  # Office server
  office-server:
    restart: on-failure:5
    build: ./gem/services/office
    expose:
      - 5001
    environment:
      - GUNICORN_CMD_ARGS=--bind=0.0.0.0:5001 --workers=1
    env_file:
      - environment.dev.env
    volumes:
      - ./gem/services/office:/usr/src/app
      - ./.data/shared/media:/usr/shared/media
    depends_on:
      - gem-server
      - db
      - pdf-printer
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:5001/office/health || exit 1

  # PDF Printer
  pdf-printer:
    restart: on-failure:5
    build: ./gem/services/pdf-printer
    expose:
      - 4999
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:4999/health || exit 1
    depends_on:
      - gem-server

  ##
  ## APPS: FRONTEND
  #portal for meeting
  portal:
    restart: on-failure:5
    build: ./gem/frontend/portal
    command: npm run dev
    expose:
      - 3000
    volumes:
      - ./gem/frontend/portal:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - environment.dev.env
    depends_on:
      - portal-server
      - meeting-server
      - office-server
    healthcheck:
      test: wget --quiet --tries=1 --spider http://0.0.0.0:3000/ || exit 1
