# Start for specified environment:
# sudo GEM_ENV=staging docker-compose up -d
#
# dev is default, so for development just run:
# sudo docker-compose up

version: '3'
services:
  ##
  ## SERVICES
  ##

  # Provides MongoDB database to store
  # all the GEM data
  db:
    restart: on-failure:5
    build: ./gem/backend/db
    volumes:
      - ./.data/db:/data/db
    ports:
      - "27017:27017"
    env_file:
      - environment.${GEM_ENV-dev}.env
    healthcheck:
      test: sh /usr/src/app/health-check.sh

  search:
    restart: "no"
    build: ./gem/backend/search
    volumes:
      - ./.data/search/data:/var/lib/sphinx/data
      - ./.data/search/logs:/var/log/sphinx
    env_file:
      - environment.${GEM_ENV-dev}.env
    expose:
      - 9306
      - 9312
    depends_on:
      - db
    healthcheck:
      test: python3 /usr/app/healtcheck.py

  # Provides NGINX web serwer to tight all
  # the web application all together in one app
  web:
    restart: on-failure:5
    build: 
      context: ./gem/backend/web
      args:
        env: ${GEM_ENV-dev}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - meeting-server
      - portal-server
      - office-server
      - portal
    volumes:
      - ./.data/shared/downloads:/usr/shared/downloads
      - ./.keys:/etc/nginx/ssl
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost/ || exit 1
  

  ##
  ## IMAGES
  ##

  # Base image for all python-based backend cantainers
  gem-server:
    image: gem-server:latest
    build: ./gem/backend/gem-server

  ##
  ## APPS: BACKEND
  ##

  # Meeting server
  meeting-server:
    restart: on-failure:5
    build: ./gem/backend/meeting
    expose:
      - 8090
      - 8099
    env_file:
      - environment.${GEM_ENV-dev}.env
    volumes:
      - ./gem/backend/meeting:/usr/src/app
    depends_on:
      - gem-server
      - db
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8099 || exit 1

  # Meeting server
  portal-server:
    restart: on-failure:5
    build: ./gem/backend/portal
    expose:
      - 5000
    env_file:
      - environment.${GEM_ENV-dev}.env
    volumes:
      - ./gem/backend/portal:/usr/src/app
    depends_on:
      - gem-server
      - db
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:5000/api/health || exit 1

  # Office server
  office-server:
    restart: on-failure:5
    build: ./gem/backend/office
    expose:
      - 5001
    env_file:
      - environment.${GEM_ENV-dev}.env
    volumes:
      - ./gem/backend/office:/usr/src/app
      - ./.data/shared/downloads:/usr/shared/downloads
    depends_on:
      - gem-server
      - db
      - pdf-printer
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:5001/office/health || exit 1

  # PDF Printer
  pdf-printer:
    restart: on-failure:5
    build: ./gem/backend/pdf-printer
    expose:
      - 4999
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:4999/health || exit 1

  ##
  ## APPS: FRONTEND
  #portal for meeting
  portal:
    restart: on-failure:5
    build: ./gem/frontend/portal
    command: npm run dev
    expose:
      - 3000
    volumes:
      - ./gem/frontend/portal:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - environment.${GEM_ENV-dev}.env
    depends_on:
      - portal-server
      - meeting-server
      - office-server
    healthcheck:
      test: wget --quiet --tries=1 --spider http://0.0.0.0:3000/ || exit 1
