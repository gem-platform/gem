# Start for specified environment:
# sudo GEM_ENV=staging docker-compose up -d
#
# dev is default, so for development just run:
# sudo docker-compose up

version: '3'
services:
  ##
  ## SERVICES
  ##

  # Provides MongoDB database to store
  # all the GEM data
  db:
    image: gemplatform/db
    restart: always
    build: ./gem/backend/db
    volumes:
      - ./.data/db:/data/db
    ports:
      - "27017:27017"
    env_file:
      - environment.${GEM_ENV-dev}.env

  gem-search:
    image: gemplatform/gem-search
    restart: "no"
    build: ./gem/backend/gem-search
    volumes:
      - ./.data/search/data:/var/lib/sphinx/data
      - ./.data/search/logs:/var/log/sphinx
    env_file:
      - environment.${GEM_ENV-dev}.env
    ports:
      - 9306:9306
      - 9312:9312
    links:
      - db:db

  # Provides NGINX web serwer to tight all
  # the web application all together in one app
  gem-web:
    image: gemplatform/gem-web
    restart: always
    build: 
      context: ./gem/backend/web
      args:
        env: ${GEM_ENV-dev}
    ports:
      - "80:80"
      - "443:443"
    links:
      - gem-meeting-server:gem-meeting-server
      - gem-portal-client:gem-portal-client
      - gem-portal-server:gem-portal-server
      - gem-office-server:gem-office-server
    volumes:
      - ./.data/shared/downloads:/usr/shared/downloads
      - ./.keys:/etc/nginx/ssl
    

  ##
  ## IMAGES
  ##

  # Base image for all python-based backend cantainers
  gem-server:
    image: gemplatform/gem-server
    build: ./gem/backend/gem-server-common

  ##
  ## APPS: BACKEND
  ##

  # Meeting server
  gem-meeting-server:
    image: gemplatform/gem-meeting-server
    restart: always
    build: ./gem/backend/gem-meeting-server
    ports:
      - "8090:8090"
    expose:
      - "8090"
    env_file:
      - environment.${GEM_ENV-dev}.env
    links:
      - db:db
    volumes:
      - ./gem/backend/gem-meeting-server:/usr/src/app

  # Meeting server
  gem-portal-server:
    image: gemplatform/gem-portal-server
    restart: always
    build: ./gem/backend/gem-portal-server
    ports:
      - "5000:5000"
    expose:
      - "5000"
    env_file:
      - environment.${GEM_ENV-dev}.env
    links:
      - db:db
    volumes:
      - ./gem/backend/gem-portal-server:/usr/src/app

  # Meeting server
  gem-office-server:
    image: gemplatform/gem-office-server
    restart: always
    build: ./gem/backend/gem-office-server
    ports:
      - "5001:5001"
    expose:
      - "5001"
    env_file:
      - environment.${GEM_ENV-dev}.env
    links:
      - db:db
      - gem-pdf-printer:gem-pdf-printer
    volumes:
      - ./gem/backend/gem-office-server:/usr/src/app
      - ./.data/shared/downloads:/usr/shared/downloads

  # PDF Printer
  gem-pdf-printer:
    image: gemplatform/gem-pdf-printer
    restart: always
    build: ./gem/backend/gem-pdf-printer
    ports:
      - "4999:4999"
    expose:
      - "4999"

  ##
  ## APPS: FRONTEND
  ##

  # Web client for meeting
  gem-portal-client:
    image: gemplatform/gem-portal-client
    restart: always
    build: ./gem/frontend/portal
    command: npm run dev
    ports:
      - "3000:3000"
    expose:
      - "3000"
    links:
      - gem-meeting-server:gem-meeting-server
    volumes:
      - ./gem/frontend/portal:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - environment.${GEM_ENV-dev}.env